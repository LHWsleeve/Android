<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.example.firstactivity">

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.FirstActivity">
        <activity
            android:name=".ThirdActivity"
            android:label="第三个acitvity"
            >
            <intent-filter tools:ignore="AppLinkUrlError">
                <action android:name="android.intent.action.VIEW"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <data android:scheme="https"/>
            </intent-filter>
        </activity>
<!--        lanuchMode:新建返回栈-->
        <activity
            android:launchMode="singleInstance"
            android:name=".SecondActivity"
            android:label="第二个activity">
            <intent-filter>
                <action android:name="com.example.firstactivity.ACTION_START" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="com.example.firstactivity.MU_CATEGORY" />
            </intent-filter>
        </activity> <!-- Activity必须要注册在manifest里面才可以生效 -->
<!--        默认是standard模式，每次都新建一个activity放入栈顶
singTop:检测当前栈顶是否是我们要的，不会无脑新建（存在有可能activity不在栈顶的情况，此时还是会重复新建activity）
singleTask:检测整个栈中是否存在activity，如果存在，将activity之上的所有activity抛出，然后置为栈顶
singleInstance:比较复杂，会启用一个新的返回栈来管理这个Activity(Task模式的特殊情况也可以)。在实现多个程序共享Activity的时候可以使用，
因为前三种都只在一个返回栈中操作，不能共存。
-->
        <activity
            android:launchMode="singleTask"
            android:name=".FisrtActivity"
            android:label="第一个Activity">

            <!-- label指定Activity标题栏的内容 -->


            <!-- 设置为主Activity才能知道那个被启动 -->
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>